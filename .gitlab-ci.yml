image: java:8-jdk

variables:
  GIT_STRATEGY: clone
  DEPLOY_DIR: 'CSCI5308builds'
  DEPLOY_HOST: 'timberlea.cs.dal.ca'
  DEPLOY_SSH_KEY: 'command="if [[ \"$SSH_ORIGINAL_COMMAND\" =~ ^scp.? ]]; then $SSH_ORIGINAL_COMMAND ; else echo Access Denied to run $SSH_ORIGINAL_COMMAND; fi",no-pty,no-port-forwarding,no-agent-forwarding,no-X11-forwarding ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBH/2lNqT/pxu4khkoCiWbDAPui4/hKFR5oCYoZWBiIWAd255Nh+ZiUKU05G/NDIcKomhf6OiZt+JvUBTuyIo5v8= vig@timberlea.CS.Dal.Ca'
  DEPLOY_USER: 'vig'

before_script:
  - export GRADLE_USER_HOME='pwd'/.gradle
  - chmod +x ./gradlew

cache:
  paths:
    - .gradle/wrapper --gradle-version=6.6.1 --distribution-type=bin
    - .gradle/caches

stages:
  - build
  - test
  - deploy

build:
  image: gradle:alpine
  stage: build
  script: 
    - ./gradlew assemble
  artifacts:
    paths:
      - build/libs/*.jar
  tags:
    - ugrad

test:
  stage: test
  script:
    - ./gradlew check
  tags:
    - ugrad

#deploy:
 # stage: deploy
  #script:
   # - chmod og-rwx ${DEPLOY_SSH_KEY}
    #- zip -r ${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}.zip ${DEPLOY_DIR}
    #- scp -r -o StrictHostKeyCheckin=no -i "${DEPLOY_SSH_KEY}" "${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_DIR}/${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}.zip"
  #tags:
   # -ugrad